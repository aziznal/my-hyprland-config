# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# see https://wiki.hyprland.org/Configuring/Variables/#binds
binds {
    # fancy feature from i3
    workspace_back_and_forth = true
}

# move windows around
bind = $mainMod SHIFT, left, movewindow, l 
bind = $mainMod SHIFT, right, movewindow, r

# Move workspaces between monitors
bind = CTRL $mainMod, comma, movecurrentworkspacetomonitor, l 
bind = CTRL $mainMod, period, movecurrentworkspacetomonitor, r 

bind = $mainMod, Return, exec, $terminal
bind = $mainMod SHIFT, Q, killactive, 
bind = $mainMod SHIFT, x, exit, 
bind = $mainMod, E, exec, $fileManager
bind = $mainMod SHIFT, SPACE, togglefloating, 
bind = $mainMod, D, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, MINUS, togglespecialworkspace, magic
bind = $mainMod SHIFT, MINUS, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Change current audio source
# Use pactl to adjust volume in PulseAudio.
binde = , XF86AudioRaiseVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ +5% && volnoti-show $(eval $get_volume)
binde = , XF86AudioLowerVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ -5% && volnoti-show $(eval $get_volume) 
binde = , XF86AudioMute, execr, pactl set-sink-mute @DEFAULT_SINK@ toggle && volnoti-show $(eval $get_mute_status)
bind = , XF86AudioMicMute, execr, pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send "Mic muted"

# Media keys
binde= , XF86AudioPlay, execr, playerctl play-pause && notify-send "Play/Pause"
binde= , XF86AudioNext, execr, playerctl next && notify-send "Next"
binde= , XF86AudioPrev, execr, playerctl prev && notify-send "Previous"

# pulseaudio-control next node shortcut (ctrl alt s) (OUTDATED!)
# bindl = CTRL ALT, s, execr, pulseaudio-control --node-blacklist alsa_output.usb-Generic_USB_Audio-00.HiFi__hw_Audio_3__sink,alsa_output.usb-Generic_USB_Audio-00.HiFi__hw_Audio_1__sink next-node

#  [[ --- copyq --- ]]
# terminating potentailly already existing servers and starting copyq server.
exec-once = copyq exit || true && copyq --start-server
bind = SHIFT $mainMod, v, exec, copyq toggle
windowrulev2 = float, class:(copyq)
windowrulev2 = pin, class:(copyq)
windowrulev2 = center, class:(copyq)
windowrulev2 = size 30% 50%, class:(copyq)
windowrulev2 = move cursor -50% -50%, class:(copyq)
windowrulev2 = bordercolor rgb(FF0000), class:(copyq)

# [[ --- flameshot (screenshots) | NOT WORKING! --- ]]
# bind = SHIFT $mainMod, s, exec, flameshot 
# bind = $mainMod SHIFT, s, execr, XDG_CURRENT_DESKTOP=sway flameshot gui 
# windowrulev2=noanim,class:^(flameshot)$
# windowrulev2=float,class:^(flameshot)$
# windowrulev2=fakefullscreen,class:^(flameshot)$
# windowrulev2=monitor 0,class:^(flameshot)$

# Toggle bedroom lights
bind = CTRL ALT, grave, execr, curl -X POST -H "Content-Type: application/json" -d '{ "action": "toggle" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 0, execr, curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 100 }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 9, execr, curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 1 }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 8, execr, curl -X POST -H "Content-Type: application/json" -d '{ "brightness": 50 }' http://192.168.1.118:8123/api/webhook/room_lights

bind = CTRL ALT, 1, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "white" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 2, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "daylight" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 3, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "blue" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 4, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "red" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 5, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "magenta" }' http://192.168.1.118:8123/api/webhook/room_lights
bind = CTRL ALT, 6, execr, curl -X POST -H "Content-Type: application/json" -d '{ "color": "cyan" }' http://192.168.1.118:8123/api/webhook/room_lights

# vim: set ft=conf:
